////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Old_and_New_Interrupt.vf
// /___/   /\     Timestamp : 11/11/2015 15:15:55
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath /home/knightcm/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/ipcore_dir -intstyle ise -family spartan3e -verilog /home/knightcm/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/Old_and_New_Interrupt.vf -w /home/knightcm/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/Old_and_New_Interrupt.sch
//Design Name: Old_and_New_Interrupt
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Or16b2_MUSER_Old_and_New_Interrupt(Int, 
                                          Num, 
                                          Ans);

    input [7:0] Int;
    input [7:0] Num;
   output [7:0] Ans;
   
   
   OR2  XLXI_1 (.I0(Num[0]), 
               .I1(Int[0]), 
               .O(Ans[0]));
   OR2  XLXI_2 (.I0(Num[1]), 
               .I1(Int[1]), 
               .O(Ans[1]));
   OR2  XLXI_3 (.I0(Num[2]), 
               .I1(Int[2]), 
               .O(Ans[2]));
   OR2  XLXI_4 (.I0(Num[3]), 
               .I1(Int[3]), 
               .O(Ans[3]));
   OR2  XLXI_5 (.I0(Num[4]), 
               .I1(Int[4]), 
               .O(Ans[4]));
   OR2  XLXI_6 (.I0(Num[5]), 
               .I1(Int[5]), 
               .O(Ans[5]));
   OR2  XLXI_7 (.I0(Num[6]), 
               .I1(Int[6]), 
               .O(Ans[6]));
   OR2  XLXI_8 (.I0(Num[7]), 
               .I1(Int[7]), 
               .O(Ans[7]));
endmodule
`timescale 1ns / 1ps

module Decoder3b8_MUSER_Old_and_New_Interrupt(Address, 
                                              CLR0, 
                                              CLR1, 
                                              CLR2, 
                                              CLR3, 
                                              CLR4, 
                                              CLR5, 
                                              CLR6, 
                                              CLR7);

    input [3:0] Address;
   output CLR0;
   output CLR1;
   output CLR2;
   output CLR3;
   output CLR4;
   output CLR5;
   output CLR6;
   output CLR7;
   
   wire N0;
   wire N1;
   wire N2;
   wire N3;
   
   AND4  XLXI_1 (.I0(N3), 
                .I1(Address[2]), 
                .I2(Address[1]), 
                .I3(Address[0]), 
                .O(CLR7));
   AND4  XLXI_2 (.I0(N3), 
                .I1(Address[2]), 
                .I2(Address[1]), 
                .I3(N0), 
                .O(CLR6));
   AND4  XLXI_3 (.I0(N3), 
                .I1(Address[2]), 
                .I2(N1), 
                .I3(Address[0]), 
                .O(CLR5));
   AND4  XLXI_4 (.I0(N3), 
                .I1(Address[2]), 
                .I2(N1), 
                .I3(N0), 
                .O(CLR4));
   AND4  XLXI_5 (.I0(N3), 
                .I1(N2), 
                .I2(Address[1]), 
                .I3(Address[0]), 
                .O(CLR3));
   AND4  XLXI_6 (.I0(N3), 
                .I1(N2), 
                .I2(Address[1]), 
                .I3(N0), 
                .O(CLR2));
   AND4  XLXI_7 (.I0(N3), 
                .I1(N2), 
                .I2(N1), 
                .I3(Address[0]), 
                .O(CLR1));
   AND4  XLXI_8 (.I0(N3), 
                .I1(N2), 
                .I2(N1), 
                .I3(N0), 
                .O(CLR0));
   INV  XLXI_17 (.I(Address[0]), 
                .O(N0));
   INV  XLXI_18 (.I(Address[1]), 
                .O(N1));
   INV  XLXI_19 (.I(Address[2]), 
                .O(N2));
   INV  XLXI_20 (.I(Address[3]), 
                .O(N3));
endmodule
`timescale 1ns / 1ps

module Interrupt_Register_MUSER_Old_and_New_Interrupt(CLK, 
                                                      CLR, 
                                                      East_Button, 
                                                      North_Button, 
                                                      South_Button, 
                                                      Sw0, 
                                                      Sw1, 
                                                      Sw2, 
                                                      Sw3, 
                                                      West_Button, 
                                                      State);

    input CLK;
    input [3:0] CLR;
    input East_Button;
    input North_Button;
    input South_Button;
    input Sw0;
    input Sw1;
    input Sw2;
    input Sw3;
    input West_Button;
   output [7:0] State;
   
   wire CLR0;
   wire CLR1;
   wire CLR2;
   wire CLR3;
   wire CLR4;
   wire CLR5;
   wire CLR6;
   wire CLR7;
   wire G;
   
   FDRSE #( .INIT(1'b0) ) XLXI_8 (.C(CLK), 
                 .CE(G), 
                 .D(G), 
                 .R(CLR0), 
                 .S(West_Button), 
                 .Q(State[0]));
   GND  XLXI_15 (.G(G));
   FDRSE #( .INIT(1'b0) ) XLXI_16 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR1), 
                  .S(South_Button), 
                  .Q(State[1]));
   FDRSE #( .INIT(1'b0) ) XLXI_17 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR2), 
                  .S(East_Button), 
                  .Q(State[2]));
   FDRSE #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR3), 
                  .S(North_Button), 
                  .Q(State[3]));
   FDRSE #( .INIT(1'b0) ) XLXI_20 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR4), 
                  .S(Sw3), 
                  .Q(State[4]));
   FDRSE #( .INIT(1'b0) ) XLXI_21 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR5), 
                  .S(Sw2), 
                  .Q(State[5]));
   FDRSE #( .INIT(1'b0) ) XLXI_22 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR6), 
                  .S(Sw1), 
                  .Q(State[6]));
   FDRSE #( .INIT(1'b0) ) XLXI_23 (.C(CLK), 
                  .CE(G), 
                  .D(G), 
                  .R(CLR7), 
                  .S(Sw0), 
                  .Q(State[7]));
   Decoder3b8_MUSER_Old_and_New_Interrupt  XLXI_25 (.Address(CLR[3:0]), 
                                                   .CLR0(CLR0), 
                                                   .CLR1(CLR1), 
                                                   .CLR2(CLR2), 
                                                   .CLR3(CLR3), 
                                                   .CLR4(CLR4), 
                                                   .CLR5(CLR5), 
                                                   .CLR6(CLR6), 
                                                   .CLR7(CLR7));
endmodule
`timescale 1ns / 1ps

module Old_and_New_Interrupt(CLK, 
                             CLR_Input, 
                             HARDWARE, 
                             State);

    input CLK;
    input [3:0] CLR_Input;
    input [7:0] HARDWARE;
   output [7:0] State;
   
   wire [7:0] Ans;
   wire [7:0] State_DUMMY;
   
   assign State[7:0] = State_DUMMY[7:0];
   Interrupt_Register_MUSER_Old_and_New_Interrupt  XLXI_1 (.CLK(CLK), 
                                                          .CLR(CLR_Input[3:0]), 
                                                          .East_Button(Ans[2]), 
                                                          
         .North_Button(Ans[0]), 
                                                          
         .South_Button(Ans[1]), 
                                                          .Sw0(Ans[4]), 
                                                          .Sw1(Ans[5]), 
                                                          .Sw2(Ans[6]), 
                                                          .Sw3(Ans[7]), 
                                                          .West_Button(Ans[3]), 
                                                          
         .State(State_DUMMY[7:0]));
   Or16b2_MUSER_Old_and_New_Interrupt  XLXI_3 (.Int(State_DUMMY[7:0]), 
                                              .Num(HARDWARE[7:0]), 
                                              .Ans(Ans[7:0]));
endmodule
