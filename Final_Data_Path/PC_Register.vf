////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : PC_Register.vf
// /___/   /\     Timestamp : 11/09/2015 09:44:45
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath /home/frenchkt/Documents/School/Sophomore/Q1/CSSE232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/ipcore_dir -intstyle ise -family spartan3e -verilog /home/frenchkt/Documents/School/Sophomore/Q1/CSSE232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/PC_Register.vf -w /home/frenchkt/Documents/School/Sophomore/Q1/CSSE232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/Final_Data_Path/PC_Register.sch
//Design Name: PC_Register
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FD16CE_MXILINX_PC_Register(C, 
                                  CE, 
                                  CLR, 
                                  D, 
                                  Q);

    input C;
    input CE;
    input CLR;
    input [15:0] D;
   output [15:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
   FDCE #( .INIT(1'b0) ) I_Q8 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[8]), 
              .Q(Q[8]));
   FDCE #( .INIT(1'b0) ) I_Q9 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[9]), 
              .Q(Q[9]));
   FDCE #( .INIT(1'b0) ) I_Q10 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[10]), 
               .Q(Q[10]));
   FDCE #( .INIT(1'b0) ) I_Q11 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[11]), 
               .Q(Q[11]));
   FDCE #( .INIT(1'b0) ) I_Q12 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[12]), 
               .Q(Q[12]));
   FDCE #( .INIT(1'b0) ) I_Q13 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[13]), 
               .Q(Q[13]));
   FDCE #( .INIT(1'b0) ) I_Q14 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[14]), 
               .Q(Q[14]));
   FDCE #( .INIT(1'b0) ) I_Q15 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[15]), 
               .Q(Q[15]));
endmodule
`timescale 1ns / 1ps

module PC_Register(CLK, 
                   DataIn, 
                   Is_Zero, 
                   PCWrite, 
                   PCWriteBeq, 
                   PCWriteBne, 
                   DataOut);

    input CLK;
    input [15:0] DataIn;
    input Is_Zero;
    input PCWrite;
    input PCWriteBeq;
    input PCWriteBne;
   output [15:0] DataOut;
   
   wire G;
   wire XLXN_1;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_12;
   wire XLXN_25;
   
   (* HU_SET = "XLXI_1_67" *) 
   FD16CE_MXILINX_PC_Register  XLXI_1 (.C(CLK), 
                                      .CE(XLXN_1), 
                                      .CLR(G), 
                                      .D(DataIn[15:0]), 
                                      .Q(DataOut[15:0]));
   GND  XLXI_8 (.G(XLXN_6));
   OR3  XLXI_12 (.I0(XLXN_12), 
                .I1(XLXN_9), 
                .I2(PCWrite), 
                .O(XLXN_1));
   AND2  XLXI_14 (.I0(Is_Zero), 
                 .I1(PCWriteBeq), 
                 .O(XLXN_9));
   AND2  XLXI_15 (.I0(XLXN_25), 
                 .I1(PCWriteBne), 
                 .O(XLXN_12));
   INV  XLXI_18 (.I(Is_Zero), 
                .O(XLXN_25));
endmodule
