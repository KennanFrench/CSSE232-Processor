////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : claAdder4b.vf
// /___/   /\     Timestamp : 11/05/2015 19:59:40
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog /home/lamd/Documents/csse232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/cla/claAdder4b.vf -w /home/lamd/Documents/csse232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/cla/claAdder4b.sch
//Design Name: claAdder4b
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module add1b_MUSER_claAdder4b(a, 
                              b, 
                              c_input, 
                              r);

    input a;
    input b;
    input c_input;
   output r;
   
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_50;
   wire XLXN_55;
   
   AND3  XLXI_22 (.I0(c_input), 
                 .I1(XLXN_11), 
                 .I2(XLXN_50), 
                 .O(XLXN_16));
   AND3  XLXI_23 (.I0(XLXN_12), 
                 .I1(XLXN_13), 
                 .I2(a), 
                 .O(XLXN_17));
   AND3  XLXI_24 (.I0(XLXN_14), 
                 .I1(b), 
                 .I2(XLXN_55), 
                 .O(XLXN_18));
   AND3  XLXI_25 (.I0(c_input), 
                 .I1(b), 
                 .I2(a), 
                 .O(XLXN_20));
   INV  XLXI_27 (.I(a), 
                .O(XLXN_50));
   INV  XLXI_28 (.I(b), 
                .O(XLXN_11));
   INV  XLXI_29 (.I(c_input), 
                .O(XLXN_12));
   INV  XLXI_30 (.I(b), 
                .O(XLXN_13));
   INV  XLXI_31 (.I(c_input), 
                .O(XLXN_14));
   INV  XLXI_32 (.I(a), 
                .O(XLXN_55));
   OR4  XLXI_33 (.I0(XLXN_20), 
                .I1(XLXN_18), 
                .I2(XLXN_17), 
                .I3(XLXN_16), 
                .O(r));
endmodule
`timescale 1ns / 1ps

module claAdder4b(a, 
                  b, 
                  ci, 
                  Gi, 
                  Pi, 
                  r);

    input [3:0] a;
    input [3:0] b;
    input ci;
   output Gi;
   output Pi;
   output [3:0] r;
   
   wire c1;
   wire c2;
   wire c3;
   wire g0;
   wire g1;
   wire g2;
   wire g3;
   wire p0;
   wire p0c0;
   wire p1;
   wire p1g0;
   wire p1p0c0;
   wire p2;
   wire p2g1;
   wire p2p1g0;
   wire p2p1p0c0;
   wire p3;
   wire p3g2;
   wire p3p2g1;
   wire p3p2p1g0;
   
   add1b_MUSER_claAdder4b  XLXI_1 (.a(a[0]), 
                                  .b(b[0]), 
                                  .c_input(ci), 
                                  .r(r[0]));
   add1b_MUSER_claAdder4b  XLXI_2 (.a(a[1]), 
                                  .b(b[1]), 
                                  .c_input(c1), 
                                  .r(r[1]));
   add1b_MUSER_claAdder4b  XLXI_3 (.a(a[2]), 
                                  .b(b[2]), 
                                  .c_input(c2), 
                                  .r(r[2]));
   add1b_MUSER_claAdder4b  XLXI_4 (.a(a[3]), 
                                  .b(b[3]), 
                                  .c_input(c3), 
                                  .r(r[3]));
   AND2  XLXI_39 (.I0(b[0]), 
                 .I1(a[0]), 
                 .O(g0));
   OR2  XLXI_40 (.I0(b[0]), 
                .I1(a[0]), 
                .O(p0));
   AND2  XLXI_41 (.I0(p0), 
                 .I1(ci), 
                 .O(p0c0));
   AND2  XLXI_42 (.I0(b[1]), 
                 .I1(a[1]), 
                 .O(g1));
   AND2  XLXI_45 (.I0(b[2]), 
                 .I1(a[2]), 
                 .O(g2));
   AND2  XLXI_46 (.I0(b[3]), 
                 .I1(a[3]), 
                 .O(g3));
   OR2  XLXI_48 (.I0(b[1]), 
                .I1(a[1]), 
                .O(p1));
   OR2  XLXI_49 (.I0(b[2]), 
                .I1(a[2]), 
                .O(p2));
   OR2  XLXI_50 (.I0(b[3]), 
                .I1(a[3]), 
                .O(p3));
   AND2  XLXI_51 (.I0(g0), 
                 .I1(p1), 
                 .O(p1g0));
   OR3  XLXI_53 (.I0(p1p0c0), 
                .I1(p1g0), 
                .I2(g1), 
                .O(c2));
   AND2  XLXI_54 (.I0(g1), 
                 .I1(p2), 
                 .O(p2g1));
   AND2  XLXI_57 (.I0(p0c0), 
                 .I1(p1), 
                 .O(p1p0c0));
   OR2  XLXI_59 (.I0(p0c0), 
                .I1(g0), 
                .O(c1));
   AND2  XLXI_65 (.I0(p1g0), 
                 .I1(p2), 
                 .O(p2p1g0));
   AND2  XLXI_66 (.I0(p1p0c0), 
                 .I1(p2), 
                 .O(p2p1p0c0));
   OR4  XLXI_67 (.I0(p2p1p0c0), 
                .I1(p2p1g0), 
                .I2(p2g1), 
                .I3(g2), 
                .O(c3));
   AND2  XLXI_68 (.I0(g2), 
                 .I1(p3), 
                 .O(p3g2));
   AND2  XLXI_69 (.I0(p2g1), 
                 .I1(p3), 
                 .O(p3p2g1));
   AND2  XLXI_70 (.I0(p2p1g0), 
                 .I1(p3), 
                 .O(p3p2p1g0));
   AND4  XLXI_73 (.I0(p0), 
                 .I1(p1), 
                 .I2(p2), 
                 .I3(p3), 
                 .O(Pi));
   OR4  XLXI_74 (.I0(p3p2p1g0), 
                .I1(p3p2g1), 
                .I2(p3g2), 
                .I3(g3), 
                .O(Gi));
endmodule
