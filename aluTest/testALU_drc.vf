////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : testALU_drc.vf
// /___/   /\     Timestamp : 11/07/2015 14:05:57
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: /opt/Xilinx/14.7/ISE_DS/ISE/bin/lin64/unwrapped/sch2hdl -intstyle ise -family spartan3e -verilog testALU_drc.vf -w /home/lamd/Documents/csse232/1516a-csse232-frenchkt-knightcm-lamd-peterseo/aluTest/testALU.sch
//Design Name: testALU
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module M2_1_MXILINX_testALU(D0, 
                            D1, 
                            S0, 
                            O);

    input D0;
    input D1;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND2B1  I_36_7 (.I0(S0), 
                  .I1(D0), 
                  .O(M0));
   OR2  I_36_8 (.I0(M1), 
               .I1(M0), 
               .O(O));
   AND2  I_36_9 (.I0(D1), 
                .I1(S0), 
                .O(M1));
endmodule
`timescale 1ns / 1ps

module INV4_MXILINX_testALU(I0, 
                            I1, 
                            I2, 
                            I3, 
                            O0, 
                            O1, 
                            O2, 
                            O3);

    input I0;
    input I1;
    input I2;
    input I3;
   output O0;
   output O1;
   output O2;
   output O3;
   
   
   INV  I_36_37 (.I(I3), 
                .O(O3));
   INV  I_36_38 (.I(I2), 
                .O(O2));
   INV  I_36_39 (.I(I1), 
                .O(O1));
   INV  I_36_40 (.I(I0), 
                .O(O0));
endmodule
`timescale 1ns / 1ps

module M2_1E_MXILINX_testALU(D0, 
                             D1, 
                             E, 
                             S0, 
                             O);

    input D0;
    input D1;
    input E;
    input S0;
   output O;
   
   wire M0;
   wire M1;
   
   AND3  I_36_30 (.I0(D1), 
                 .I1(E), 
                 .I2(S0), 
                 .O(M1));
   AND3B1  I_36_31 (.I0(S0), 
                   .I1(E), 
                   .I2(D0), 
                   .O(M0));
   OR2  I_36_38 (.I0(M1), 
                .I1(M0), 
                .O(O));
endmodule
`timescale 1ns / 1ps

module M4_1E_MXILINX_testALU(D0, 
                             D1, 
                             D2, 
                             D3, 
                             E, 
                             S0, 
                             S1, 
                             O);

    input D0;
    input D1;
    input D2;
    input D3;
    input E;
    input S0;
    input S1;
   output O;
   
   wire M01;
   wire M23;
   
   (* HU_SET = "I_M01_1" *) 
   M2_1E_MXILINX_testALU  I_M01 (.D0(D0), 
                                .D1(D1), 
                                .E(E), 
                                .S0(S0), 
                                .O(M01));
   (* HU_SET = "I_M23_0" *) 
   M2_1E_MXILINX_testALU  I_M23 (.D0(D2), 
                                .D1(D3), 
                                .E(E), 
                                .S0(S0), 
                                .O(M23));
   MUXF5  I_O (.I0(M01), 
              .I1(M23), 
              .S(S1), 
              .O(O));
endmodule
`timescale 1ns / 1ps

module add1b_MUSER_testALU(a, 
                           b, 
                           ci, 
                           co, 
                           r);

    input a;
    input b;
    input ci;
   output co;
   output r;
   
   wire anot;
   wire bnot;
   wire cinot;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   
   AND2  XLXI_1 (.I0(a), 
                .I1(ci), 
                .O(XLXN_1));
   AND2  XLXI_2 (.I0(b), 
                .I1(ci), 
                .O(XLXN_2));
   AND2  XLXI_3 (.I0(b), 
                .I1(a), 
                .O(XLXN_3));
   OR3  XLXI_4 (.I0(XLXN_3), 
               .I1(XLXN_2), 
               .I2(XLXN_1), 
               .O(co));
   AND3  XLXI_5 (.I0(b), 
                .I1(a), 
                .I2(ci), 
                .O(XLXN_11));
   AND3  XLXI_6 (.I0(bnot), 
                .I1(anot), 
                .I2(ci), 
                .O(XLXN_12));
   AND3  XLXI_7 (.I0(bnot), 
                .I1(a), 
                .I2(cinot), 
                .O(XLXN_13));
   AND3  XLXI_8 (.I0(b), 
                .I1(anot), 
                .I2(cinot), 
                .O(XLXN_14));
   OR4  XLXI_9 (.I0(XLXN_14), 
               .I1(XLXN_13), 
               .I2(XLXN_12), 
               .I3(XLXN_11), 
               .O(r));
   INV  XLXI_33 (.I(a), 
                .O(anot));
   INV  XLXI_34 (.I(b), 
                .O(bnot));
   INV  XLXI_35 (.I(ci), 
                .O(cinot));
endmodule
`timescale 1ns / 1ps

module alu1b_MUSER_testALU(a, 
                           b, 
                           ci, 
                           l, 
                           op, 
                           co, 
                           r, 
                           s);

    input a;
    input b;
    input ci;
    input l;
    input [2:0] op;
   output co;
   output r;
   output s;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_13;
   wire XLXN_38;
   wire XLXN_40;
   wire s_DUMMY;
   
   assign s = s_DUMMY;
   AND2  XLXI_1 (.I0(XLXN_40), 
                .I1(a), 
                .O(XLXN_8));
   OR2  XLXI_2 (.I0(XLXN_40), 
               .I1(a), 
               .O(XLXN_9));
   add1b_MUSER_testALU  XLXI_3 (.a(a), 
                               .b(XLXN_40), 
                               .ci(ci), 
                               .co(co), 
                               .r(s_DUMMY));
   (* HU_SET = "XLXI_8_2" *) 
   M4_1E_MXILINX_testALU  XLXI_8 (.D0(XLXN_8), 
                                 .D1(XLXN_9), 
                                 .D2(s_DUMMY), 
                                 .D3(l), 
                                 .E(XLXN_13), 
                                 .S0(op[0]), 
                                 .S1(op[1]), 
                                 .O(r));
   VCC  XLXI_9 (.P(XLXN_13));
   (* HU_SET = "XLXI_15_3" *) 
   M2_1_MXILINX_testALU  XLXI_15 (.D0(b), 
                                 .D1(XLXN_38), 
                                 .S0(op[2]), 
                                 .O(XLXN_40));
   INV  XLXI_16 (.I(b), 
                .O(XLXN_38));
endmodule
`timescale 1ns / 1ps

module claAdder4b_MUSER_testALU(a, 
                                b, 
                                ci, 
                                op, 
                                c_out, 
                                c3, 
                                Gi, 
                                Pi, 
                                r, 
                                zero);

    input [3:0] a;
    input [3:0] b;
    input ci;
    input [2:0] op;
   output c_out;
   output c3;
   output Gi;
   output Pi;
   output [3:0] r;
   output zero;
   
   wire c1;
   wire c2;
   wire ground;
   wire g0;
   wire g1;
   wire g2;
   wire g3;
   wire nb0;
   wire nb1;
   wire nb2;
   wire nb3;
   wire p0;
   wire p0c0;
   wire p1;
   wire p1g0;
   wire p1p0c0;
   wire p2;
   wire p2g1;
   wire p2p1g0;
   wire p2p1p0c0;
   wire p3;
   wire p3g2;
   wire p3p2g1;
   wire p3p2p1g0;
   wire p3p2p1p0c0;
   wire sb0;
   wire sb1;
   wire sb2;
   wire sb3;
   wire XLXN_39;
   wire c3_DUMMY;
   wire [3:0] r_DUMMY;
   
   assign c3 = c3_DUMMY;
   assign r[3:0] = r_DUMMY[3:0];
   AND2  XLXI_39 (.I0(sb0), 
                 .I1(a[0]), 
                 .O(g0));
   OR2  XLXI_40 (.I0(sb0), 
                .I1(a[0]), 
                .O(p0));
   AND2  XLXI_41 (.I0(p0), 
                 .I1(ci), 
                 .O(p0c0));
   AND2  XLXI_42 (.I0(sb1), 
                 .I1(a[1]), 
                 .O(g1));
   AND2  XLXI_45 (.I0(sb2), 
                 .I1(a[2]), 
                 .O(g2));
   AND2  XLXI_46 (.I0(sb3), 
                 .I1(a[3]), 
                 .O(g3));
   OR2  XLXI_48 (.I0(sb1), 
                .I1(a[1]), 
                .O(p1));
   OR2  XLXI_49 (.I0(sb2), 
                .I1(a[2]), 
                .O(p2));
   OR2  XLXI_50 (.I0(sb3), 
                .I1(a[3]), 
                .O(p3));
   AND2  XLXI_51 (.I0(g0), 
                 .I1(p1), 
                 .O(p1g0));
   OR3  XLXI_53 (.I0(p1p0c0), 
                .I1(p1g0), 
                .I2(g1), 
                .O(c2));
   AND2  XLXI_54 (.I0(g1), 
                 .I1(p2), 
                 .O(p2g1));
   AND2  XLXI_57 (.I0(p0c0), 
                 .I1(p1), 
                 .O(p1p0c0));
   OR2  XLXI_59 (.I0(p0c0), 
                .I1(g0), 
                .O(c1));
   AND2  XLXI_65 (.I0(p1g0), 
                 .I1(p2), 
                 .O(p2p1g0));
   AND2  XLXI_66 (.I0(p1p0c0), 
                 .I1(p2), 
                 .O(p2p1p0c0));
   OR4  XLXI_67 (.I0(p2p1p0c0), 
                .I1(p2p1g0), 
                .I2(p2g1), 
                .I3(g2), 
                .O(c3_DUMMY));
   AND2  XLXI_68 (.I0(g2), 
                 .I1(p3), 
                 .O(p3g2));
   AND2  XLXI_69 (.I0(p2g1), 
                 .I1(p3), 
                 .O(p3p2g1));
   AND2  XLXI_70 (.I0(p2p1g0), 
                 .I1(p3), 
                 .O(p3p2p1g0));
   AND4  XLXI_73 (.I0(p0), 
                 .I1(p1), 
                 .I2(p2), 
                 .I3(p3), 
                 .O(Pi));
   OR4  XLXI_74 (.I0(p3p2p1g0), 
                .I1(p3p2g1), 
                .I2(p3g2), 
                .I3(g3), 
                .O(Gi));
   AND2  XLXI_75 (.I0(p2p1p0c0), 
                 .I1(p3), 
                 .O(p3p2p1p0c0));
   OR5  XLXI_76 (.I0(p3p2p1p0c0), 
                .I1(p3p2p1g0), 
                .I2(p3p2g1), 
                .I3(p3g2), 
                .I4(g3), 
                .O(c_out));
   alu1b_MUSER_testALU  XLXI_78 (.a(a[0]), 
                                .b(b[0]), 
                                .ci(ci), 
                                .l(XLXN_39), 
                                .op(op[2:0]), 
                                .co(), 
                                .r(r_DUMMY[0]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_79 (.a(a[1]), 
                                .b(b[1]), 
                                .ci(c1), 
                                .l(ground), 
                                .op(op[2:0]), 
                                .co(), 
                                .r(r_DUMMY[1]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_81 (.a(a[2]), 
                                .b(b[2]), 
                                .ci(c2), 
                                .l(ground), 
                                .op(op[2:0]), 
                                .co(), 
                                .r(r_DUMMY[2]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_83 (.a(a[3]), 
                                .b(b[3]), 
                                .ci(c3_DUMMY), 
                                .l(ground), 
                                .op(op[2:0]), 
                                .co(), 
                                .r(r_DUMMY[3]), 
                                .s(XLXN_39));
   NOR4  XLXI_85 (.I0(r_DUMMY[3]), 
                 .I1(r_DUMMY[2]), 
                 .I2(r_DUMMY[1]), 
                 .I3(r_DUMMY[0]), 
                 .O(zero));
   GND  XLXI_86 (.G(ground));
   (* HU_SET = "XLXI_87_4" *) 
   INV4_MXILINX_testALU  XLXI_87 (.I0(b[3]), 
                                 .I1(b[2]), 
                                 .I2(b[1]), 
                                 .I3(b[0]), 
                                 .O0(nb3), 
                                 .O1(nb2), 
                                 .O2(nb1), 
                                 .O3(nb0));
   (* HU_SET = "XLXI_92_5" *) 
   M2_1_MXILINX_testALU  XLXI_92 (.D0(b[0]), 
                                 .D1(nb0), 
                                 .S0(op[2]), 
                                 .O(sb0));
   (* HU_SET = "XLXI_93_6" *) 
   M2_1_MXILINX_testALU  XLXI_93 (.D0(b[1]), 
                                 .D1(nb1), 
                                 .S0(op[2]), 
                                 .O(sb1));
   (* HU_SET = "XLXI_94_7" *) 
   M2_1_MXILINX_testALU  XLXI_94 (.D0(b[2]), 
                                 .D1(nb2), 
                                 .S0(op[2]), 
                                 .O(sb2));
   (* HU_SET = "XLXI_95_8" *) 
   M2_1_MXILINX_testALU  XLXI_95 (.D0(b[3]), 
                                 .D1(nb3), 
                                 .S0(op[2]), 
                                 .O(sb3));
endmodule
`timescale 1ns / 1ps

module claAdde16b_MUSER_testALU(a, 
                                b, 
                                op, 
                                c_out, 
                                overflow, 
                                r, 
                                zero);

    input [15:0] a;
    input [15:0] b;
    input [2:0] op;
   output c_out;
   output overflow;
   output [15:0] r;
   output zero;
   
   wire C1;
   wire C2;
   wire C3;
   wire G0;
   wire G1;
   wire G2;
   wire G3;
   wire P0;
   wire P0c0;
   wire P1;
   wire P1G0;
   wire P1P0c0;
   wire P2;
   wire P2G1;
   wire P2P1G0;
   wire P2P1P0c0;
   wire P3;
   wire P3G2;
   wire P3P2G1;
   wire P3P2P1G0;
   wire P3P2P1P0c0;
   wire XLXN_29;
   wire XLXN_30;
   wire Z0;
   wire Z1;
   wire Z2;
   wire Z3;
   
   claAdder4b_MUSER_testALU  XLXI_2 (.a(a[3:0]), 
                                    .b(b[3:0]), 
                                    .ci(op[2]), 
                                    .op(op[2:0]), 
                                    .c_out(), 
                                    .c3(), 
                                    .Gi(G0), 
                                    .Pi(P0), 
                                    .r(r[3:0]), 
                                    .zero(Z0));
   claAdder4b_MUSER_testALU  XLXI_3 (.a(a[7:4]), 
                                    .b(b[7:4]), 
                                    .ci(C1), 
                                    .op(op[2:0]), 
                                    .c_out(), 
                                    .c3(), 
                                    .Gi(G1), 
                                    .Pi(P1), 
                                    .r(r[7:4]), 
                                    .zero(Z1));
   claAdder4b_MUSER_testALU  XLXI_4 (.a(a[11:8]), 
                                    .b(b[11:8]), 
                                    .ci(C2), 
                                    .op(op[2:0]), 
                                    .c_out(), 
                                    .c3(), 
                                    .Gi(G2), 
                                    .Pi(P2), 
                                    .r(r[11:8]), 
                                    .zero(Z2));
   claAdder4b_MUSER_testALU  XLXI_5 (.a(a[15:12]), 
                                    .b(b[15:12]), 
                                    .ci(C3), 
                                    .op(op[2:0]), 
                                    .c_out(XLXN_30), 
                                    .c3(XLXN_29), 
                                    .Gi(G3), 
                                    .Pi(P3), 
                                    .r(r[15:12]), 
                                    .zero(Z3));
   AND2  XLXI_6 (.I0(op[2]), 
                .I1(P0), 
                .O(P0c0));
   OR2  XLXI_7 (.I0(P0c0), 
               .I1(G0), 
               .O(C1));
   AND2  XLXI_8 (.I0(G0), 
                .I1(P1), 
                .O(P1G0));
   AND2  XLXI_9 (.I0(P0c0), 
                .I1(P1), 
                .O(P1P0c0));
   OR3  XLXI_10 (.I0(P1P0c0), 
                .I1(P1G0), 
                .I2(G1), 
                .O(C2));
   AND2  XLXI_11 (.I0(G1), 
                 .I1(P2), 
                 .O(P2G1));
   AND2  XLXI_12 (.I0(P1G0), 
                 .I1(P2), 
                 .O(P2P1G0));
   AND2  XLXI_13 (.I0(P1P0c0), 
                 .I1(P2), 
                 .O(P2P1P0c0));
   AND2  XLXI_14 (.I0(G2), 
                 .I1(P3), 
                 .O(P3G2));
   AND2  XLXI_15 (.I0(P2G1), 
                 .I1(P3), 
                 .O(P3P2G1));
   AND2  XLXI_16 (.I0(P2P1G0), 
                 .I1(P3), 
                 .O(P3P2P1G0));
   AND2  XLXI_17 (.I0(P2P1P0c0), 
                 .I1(P3), 
                 .O(P3P2P1P0c0));
   OR4  XLXI_18 (.I0(P2P1P0c0), 
                .I1(P2P1G0), 
                .I2(P2G1), 
                .I3(G2), 
                .O(C3));
   OR5  XLXI_19 (.I0(P3P2P1P0c0), 
                .I1(P3P2P1G0), 
                .I2(P3P2G1), 
                .I3(P3G2), 
                .I4(G3), 
                .O(c_out));
   XOR2  XLXI_24 (.I0(XLXN_30), 
                 .I1(XLXN_29), 
                 .O(overflow));
   AND4  XLXI_28 (.I0(Z3), 
                 .I1(Z2), 
                 .I2(Z1), 
                 .I3(Z0), 
                 .O(zero));
endmodule
`timescale 1ns / 1ps

module NOR16_MXILINX_testALU(I0, 
                             I1, 
                             I2, 
                             I3, 
                             I4, 
                             I5, 
                             I6, 
                             I7, 
                             I8, 
                             I9, 
                             I10, 
                             I11, 
                             I12, 
                             I13, 
                             I14, 
                             I15, 
                             O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
    input I8;
    input I9;
    input I10;
    input I11;
    input I12;
    input I13;
    input I14;
    input I15;
   output O;
   
   wire CIN;
   wire C0;
   wire C1;
   wire C2;
   wire S0;
   wire S1;
   wire S2;
   wire S3;
   wire XLXN_46;
   
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_2 (.CI(CIN), 
                   .DI(XLXN_46), 
                   .S(S0), 
                   .LO(C0));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_29 (.I1(I0), 
                 .I2(I1), 
                 .I3(I2), 
                 .I4(I3), 
                 .O(S0));
   VCC  I_36_107 (.P(CIN));
   GND  I_36_109 (.G(XLXN_46));
   NOR4  I_36_110 (.I0(I0), 
                  .I1(I1), 
                  .I2(I2), 
                  .I3(I3), 
                  .O(S0));
   NOR4  I_36_127 (.I0(I4), 
                  .I1(I5), 
                  .I2(I6), 
                  .I3(I7), 
                  .O(S1));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_129 (.CI(C0), 
                     .DI(XLXN_46), 
                     .S(S1), 
                     .LO(C1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_138 (.I1(I4), 
                  .I2(I5), 
                  .I3(I6), 
                  .I4(I7), 
                  .O(S1));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_142 (.I1(I8), 
                  .I2(I9), 
                  .I3(I10), 
                  .I4(I11), 
                  .O(S2));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_147 (.CI(C1), 
                     .DI(XLXN_46), 
                     .S(S2), 
                     .LO(C2));
   NOR4  I_36_151 (.I0(I8), 
                  .I1(I9), 
                  .I2(I10), 
                  .I3(I11), 
                  .O(S2));
   NOR4  I_36_161 (.I0(I12), 
                  .I1(I13), 
                  .I2(I14), 
                  .I3(I15), 
                  .O(S3));
   (* RLOC = "X0Y1" *) 
   MUXCY  I_36_165 (.CI(C2), 
                   .DI(XLXN_46), 
                   .S(S3), 
                   .O(O));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_170 (.I1(I12), 
                  .I2(I13), 
                  .I3(I14), 
                  .I4(I15), 
                  .O(S3));
endmodule
`timescale 1ns / 1ps

module alu16b_MUSER_testALU(A, 
                            B, 
                            op, 
                            ovfl, 
                            R, 
                            zero);

    input [15:0] A;
    input [15:0] B;
    input [2:0] op;
   output ovfl;
   output [15:0] R;
   output zero;
   
   wire G;
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_63;
   wire XLXN_65;
   wire XLXN_67;
   wire XLXN_89;
   wire XLXN_91;
   wire XLXN_93;
   wire XLXN_174;
   wire XLXN_175;
   wire XLXN_176;
   wire XLXN_177;
   wire XLXN_181;
   wire [15:0] R_DUMMY;
   
   assign R[15:0] = R_DUMMY[15:0];
   alu1b_MUSER_testALU  XLXI_1 (.a(A[0]), 
                               .b(B[0]), 
                               .ci(op[2]), 
                               .l(XLXN_177), 
                               .op(op[2:0]), 
                               .co(XLXN_1), 
                               .r(R_DUMMY[0]), 
                               .s());
   alu1b_MUSER_testALU  XLXI_2 (.a(A[1]), 
                               .b(B[1]), 
                               .ci(XLXN_1), 
                               .l(G), 
                               .op(op[2:0]), 
                               .co(XLXN_2), 
                               .r(R_DUMMY[1]), 
                               .s());
   alu1b_MUSER_testALU  XLXI_3 (.a(A[2]), 
                               .b(B[2]), 
                               .ci(XLXN_2), 
                               .l(G), 
                               .op(op[2:0]), 
                               .co(XLXN_3), 
                               .r(R_DUMMY[2]), 
                               .s());
   alu1b_MUSER_testALU  XLXI_4 (.a(A[3]), 
                               .b(B[3]), 
                               .ci(XLXN_3), 
                               .l(G), 
                               .op(op[2:0]), 
                               .co(XLXN_175), 
                               .r(R_DUMMY[3]), 
                               .s());
   GND  XLXI_9 (.G(G));
   alu1b_MUSER_testALU  XLXI_10 (.a(A[4]), 
                                .b(B[4]), 
                                .ci(XLXN_175), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_6), 
                                .r(R_DUMMY[4]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_11 (.a(A[5]), 
                                .b(B[5]), 
                                .ci(XLXN_6), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_8), 
                                .r(R_DUMMY[5]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_12 (.a(A[6]), 
                                .b(B[6]), 
                                .ci(XLXN_8), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_10), 
                                .r(R_DUMMY[6]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_13 (.a(A[7]), 
                                .b(B[7]), 
                                .ci(XLXN_10), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_176), 
                                .r(R_DUMMY[7]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_18 (.a(A[8]), 
                                .b(B[8]), 
                                .ci(XLXN_176), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_63), 
                                .r(R_DUMMY[8]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_19 (.a(A[9]), 
                                .b(B[9]), 
                                .ci(XLXN_63), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_65), 
                                .r(R_DUMMY[9]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_20 (.a(A[10]), 
                                .b(B[10]), 
                                .ci(XLXN_65), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_67), 
                                .r(R_DUMMY[10]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_21 (.a(A[11]), 
                                .b(B[11]), 
                                .ci(XLXN_67), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_174), 
                                .r(R_DUMMY[11]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_22 (.a(A[12]), 
                                .b(B[12]), 
                                .ci(XLXN_174), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_89), 
                                .r(R_DUMMY[12]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_23 (.a(A[13]), 
                                .b(B[13]), 
                                .ci(XLXN_89), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_91), 
                                .r(R_DUMMY[13]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_24 (.a(A[14]), 
                                .b(B[14]), 
                                .ci(XLXN_91), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_93), 
                                .r(R_DUMMY[14]), 
                                .s());
   alu1b_MUSER_testALU  XLXI_25 (.a(A[15]), 
                                .b(B[15]), 
                                .ci(XLXN_93), 
                                .l(G), 
                                .op(op[2:0]), 
                                .co(XLXN_181), 
                                .r(R_DUMMY[15]), 
                                .s(XLXN_177));
   XOR2  XLXI_35 (.I0(XLXN_181), 
                 .I1(XLXN_93), 
                 .O(ovfl));
   (* HU_SET = "XLXI_36_9" *) 
   NOR16_MXILINX_testALU  XLXI_36 (.I0(R_DUMMY[15]), 
                                  .I1(R_DUMMY[14]), 
                                  .I2(R_DUMMY[13]), 
                                  .I3(R_DUMMY[12]), 
                                  .I4(R_DUMMY[11]), 
                                  .I5(R_DUMMY[10]), 
                                  .I6(R_DUMMY[9]), 
                                  .I7(R_DUMMY[8]), 
                                  .I8(R_DUMMY[7]), 
                                  .I9(R_DUMMY[6]), 
                                  .I10(R_DUMMY[5]), 
                                  .I11(R_DUMMY[4]), 
                                  .I12(R_DUMMY[3]), 
                                  .I13(R_DUMMY[2]), 
                                  .I14(R_DUMMY[1]), 
                                  .I15(R_DUMMY[0]), 
                                  .O(zero));
endmodule
`timescale 1ns / 1ps

module testALU(A, 
               B, 
               op, 
               clRes, 
               c_out, 
               overflow, 
               R, 
               XLXN_9, 
               XLXN_10, 
               zero);

    input [15:0] A;
    input [15:0] B;
    input [2:0] op;
   output [15:0] clRes;
   output c_out;
   output overflow;
   output [15:0] R;
   output XLXN_9;
   output XLXN_10;
   output zero;
   
   
   alu16b_MUSER_testALU  XLXI_1 (.A(A[15:0]), 
                                .B(B[15:0]), 
                                .op(op[2:0]), 
                                .ovfl(XLXN_9), 
                                .R(R[15:0]), 
                                .zero(XLXN_10));
   claAdde16b_MUSER_testALU  XLXI_2 (.a(A[15:0]), 
                                    .b(B[15:0]), 
                                    .op(op[2:0]), 
                                    .c_out(c_out), 
                                    .overflow(overflow), 
                                    .r(clRes[15:0]), 
                                    .zero(zero));
endmodule
